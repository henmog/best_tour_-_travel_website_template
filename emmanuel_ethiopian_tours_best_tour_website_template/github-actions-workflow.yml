# GitHub Actions Workflow for Emmanuel Ethiopian Tours
# 
# To use this workflow:
# 1. Create a .github/workflows/ directory in your repository
# 2. Create a file named 'deploy.yml' in that directory
# 3. Copy the content below into that file
# 4. Set up the required secrets in your GitHub repository settings

name: Deploy to Vercel

on:
  push:
    branches:
      - main
      - stellar-world
  pull_request:
    branches:
      - main

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build CSS
        run: npm run build:css

      - name: Test build process
        run: npm run build
        env:
          BUILDER_PUBLIC_KEY: ${{ secrets.BUILDER_PUBLIC_KEY }}

      - name: Check HTML validity (optional)
        run: |
          # Install html-validate for HTML checking
          npm install -g html-validate
          # Validate HTML files
          html-validate public/**/*.html || echo "HTML validation warnings found"

  deploy-preview:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          BUILDER_PUBLIC_KEY: ${{ secrets.BUILDER_PUBLIC_KEY }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          BUILDER_PUBLIC_KEY: ${{ secrets.BUILDER_PUBLIC_KEY }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  lighthouse-check:
    needs: deploy-production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          configPath: './lighthouserc.js'
          uploadArtifacts: true
          temporaryPublicStorage: true

# Required GitHub Secrets:
# - VERCEL_TOKEN: Your Vercel API token
# - VERCEL_ORG_ID: Your Vercel organization ID
# - VERCEL_PROJECT_ID: Your Vercel project ID
# - BUILDER_PUBLIC_KEY: Your Builder.io public API key
#
# To get these values:
# 1. Install Vercel CLI: npm i -g vercel
# 2. Run: vercel login
# 3. Run: vercel link (in your project directory)
# 4. Find .vercel/project.json for ORG_ID and PROJECT_ID
# 5. Get VERCEL_TOKEN from Vercel dashboard → Settings → Tokens
